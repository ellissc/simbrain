name: build_macos

on:
  push:
    branches:
      - build_macos

jobs:
  build:
    if: contains(github.event.head_commit.message, '[push macos]')
    runs-on: macos-latest
    environment: macos
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      - name: Install Apple Certificate
        env:
          CERTIFICATE_BASE64: ${{ secrets.MAC_CERTIFICATE }}
          CERTIFICATE_PASSWORD: ${{ secrets.MAC_CERTIFICATE_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          echo $CERTIFICATE_BASE64 | base64 --decode > certificate.p12
          security create-keychain -p "${KEYCHAIN_PASSWORD}" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "${KEYCHAIN_PASSWORD}" build.keychain
          security import certificate.p12 -k build.keychain -P $CERTIFICATE_PASSWORD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "${KEYCHAIN_PASSWORD}" build.keychain 
          security list-keychains -s build.keychain
          rm -f certificate.p12
      - name: Verify Certificate
        run: security find-identity -p codesigning -v
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: debug
        uses: fawazahmed0/action-debug@main
        with:
          credentials: "${{ secrets.DEBUG_USER }}:${{ secrets.DEBUG_PASSWORD }}"
      - name: Build with Gradle
        run: ./gradlew createMacDmg
      - name: Install AWS CLI
        run: |
          brew update
          brew install awscli
      - name: Configure AWS CLI for Cloudflare R2
        env:
          R2_ACCESS_KEY: ${{ secrets.R2_ACCESS_KEY }}
          R2_SECRET_KEY: ${{ secrets.R2_SECRET_KEY }}
        run: |
          aws configure set aws_access_key_id $R2_ACCESS_KEY
          aws configure set aws_secret_access_key $R2_SECRET_KEY
          aws configure set default.region auto

      - name: Upload to Cloudflare R2
        env:
          CLOUDFLARE_R2_BUCKET: ${{ secrets.CLOUDFLARE_R2_BUCKET }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          aws s3 cp build/dist/Simbrain*.dmg s3://$CLOUDFLARE_R2_BUCKET/ --endpoint-url=https://$CLOUDFLARE_ACCOUNT_ID.r2.cloudflarestorage.com
